DROP DATABASE IF EXISTS LISTACOMPRA;
CREATE DATABASE LISTACOMPRA;

DROP USER IF EXISTS 'adminlistacompra'@'localhost';
CREATE USER 'adminlistacompra'@'localhost' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON LISTACOMPRA.* TO 'adminlistacompra'@'localhost';
FLUSH PRIVILEGES;

DROP TABLE IF EXISTS LISTACOMPRA.USUARIOS;
CREATE TABLE LISTACOMPRA.USUARIOS (
  IDUSUARIO INT NOT NULL AUTO_INCREMENT,
  DNI VARCHAR(9) UNIQUE,
  NOMBRE VARCHAR(50),
  APELLIDOS VARCHAR(100),
  TELEFONO VARCHAR(20) UNIQUE,
  EMAIL VARCHAR(200) UNIQUE,
  PASSWORD VARCHAR(45),
  FNAC DATE,
  SEXO ENUM('Masculino','Femenino'),
  ROL ENUM('Administrador','Usuario'),
  ESTADO ENUM('Activo','Inactivo'),
  IMGTYPE ENUM('image/jpeg', 'image/png', 'image/jpg'),
  IMGBINARY LONGBLOB,
  LASTLOGIN DATETIME,

  CONSTRAINT PK_IDUSUARIO PRIMARY KEY(IDUSUARIO)
);

DROP TABLE IF EXISTS LISTACOMPRA.LISTA;
CREATE TABLE LISTACOMPRA.LISTA (
  IDLISTA INT NOT NULL AUTO_INCREMENT,
  IDPROPIETARIO INT,
  NOMBRE VARCHAR (45),
  DESCRIPCION VARCHAR(200),
  FECHA DATETIME,
  IMGTYPE ENUM('image/jpeg', 'image/png', 'image/jpg'),
  IMGBINARY LONGBLOB,

  CONSTRAINT PK_IDLISTA PRIMARY KEY(IDLISTA),
  CONSTRAINT FK_IDPROPIETARIO FOREIGN KEY(IDPROPIETARIO) REFERENCES USUARIOS(IDUSUARIO)
);

DROP TABLE IF EXISTS LISTACOMPRA.PRODUCTOS;
CREATE TABLE LISTACOMPRA.PRODUCTOS (
  IDPRODUCTO INT NOT NULL AUTO_INCREMENT,
  NOMBRE VARCHAR(45),
  DESCRIPCION VARCHAR(45),

  CONSTRAINT PK_IDPRODUCTO PRIMARY KEY(IDPRODUCTO)
);


DROP TABLE IF EXISTS LISTACOMPRA.LISTAPRODUCTOS;
CREATE TABLE LISTACOMPRA.LISTAPRODUCTOS (
  IDLISTA INT,
  IDPRODUCTO INT,
  CANTIDAD INT,

  CONSTRAINT FK_LISTACOMPRA_LISTAID FOREIGN KEY(IDLISTA) REFERENCES LISTA(IDLISTA),
  CONSTRAINT FK_LISTACOMPRA_IDPRODUCTO FOREIGN KEY(IDPRODUCTO) REFERENCES PRODUCTOS(IDPRODUCTO)
);

DROP TABLE IF EXISTS LISTACOMPRA.GRUPOS;
CREATE TABLE LISTACOMPRA.GRUPOS (
  IDLISTA INT,
  IDUSUARIO INT,
  PRIVILEGIOS ENUM('Propietario','Editor','Lector'),

  CONSTRAINT FK_GRUPOS_LISTAID FOREIGN KEY(IDLISTA) REFERENCES LISTA(IDLISTA),
  CONSTRAINT FK_GRUPOS_IDUSUARIO FOREIGN KEY(IDUSUARIO) REFERENCES USUARIOS(IDUSUARIO)
);


/*Tablas de log*/
DROP TABLE IF EXISTS LISTACOMPRA.LOG;
CREATE TABLE LISTACOMPRA.LOG(
  IDLOG INT NOT NULL AUTO_INCREMENT,
  FECHA DATETIME,
  DESCRIPCION VARCHAR(200),

  CONSTRAINT PK_IDLOG PRIMARY KEY(IDLOG)
);


DROP TABLE IF EXISTS LISTACOMPRA.HISTORICO;
CREATE TABLE LISTACOMPRA.HISTORICO (
  IDHISTORICO INT NOT NULL AUTO_INCREMENT,
  NOMBRE VARCHAR(200),
  CANTIDAD INT,

  CONSTRAINT PK_IDHISTORICO PRIMARY KEY(IDHISTORICO)
);

INSERT INTO LISTACOMPRA.HISTORICO (NOMBRE, CANTIDAD) VALUES ('Número de Listas Creadas:', 0);
INSERT INTO LISTACOMPRA.HISTORICO (NOMBRE, CANTIDAD) VALUES ('Número de Listas Activas:', 0);
INSERT INTO LISTACOMPRA.HISTORICO (NOMBRE, CANTIDAD) VALUES ('Número de Listas con Elementos pendientes de compra:', 0);

-- Tabla de productos comprados en historico

DROP TABLE IF EXISTS LISTACOMPRA.HISTORICOPRODUCTOS;
CREATE TABLE LISTACOMPRA.HISTORICOPRODUCTOS (
  IDHISTORICO INT NOT NULL AUTO_INCREMENT,
  NOMBRE VARCHAR(200),
  CANTIDAD INT,

  CONSTRAINT PK_IDHISTORICO PRIMARY KEY(IDHISTORICO)
);


-- CREATE OR REPLACE VIEW PRODUCTOSENLISTAS AS
--   SELECT P.NOMBRE, SUM(L.CANTIDAD) AS CANTIDAD FROM PRODUCTOS AS P
--   INNER JOIN LISTAPRODUCTOS AS L
--   ON P.IDPRODUCTO = L.IDPRODUCTO
--   GROUP BY P.IDPRODUCTO;


USE LISTACOMPRA;
DELIMITER //

CREATE OR REPLACE TRIGGER LOGIN_USER
AFTER UPDATE ON USUARIOS FOR EACH ROW BEGIN
  DECLARE VARIDUSUARIO INT;
  SET VARIDUSUARIO = NEW.IDUSUARIO;

  IF VARIDUSUARIO IN (SELECT IDUSUARIO FROM USUARIOS WHERE IDUSUARIO = VARIDUSUARIO) THEN
    INSERT INTO LOG (FECHA, DESCRIPCION) VALUES (NOW(), CONCAT("El usuario: ", (SELECT NOMBRE FROM USUARIOS WHERE IDUSUARIO = VARIDUSUARIO), " se ha autenticado correctamente"));
  END IF;
END //

/* ACCIONES CON LISTAS*/
/*Al crear una nueva lista se indica en el log y se actualiza el historico*/
CREATE OR REPLACE TRIGGER NEW_LISTA
AFTER INSERT ON LISTA FOR EACH ROW BEGIN
    INSERT INTO LOG (FECHA, DESCRIPCION) VALUES (NOW(), CONCAT("Creación de lista nueva: ", NEW.NOMBRE));
    UPDATE HISTORICO SET CANTIDAD = CANTIDAD + 1 WHERE IDHISTORICO = 1;
    UPDATE HISTORICO SET CANTIDAD = CANTIDAD + 1 WHERE IDHISTORICO = 2;
END //

/*
Al borrar una lista se indica en el log y se actualiza el historico quitando solo las listas activas

Tb se registra el cambio de la cantidad de Listas con productos si esta lo tuviera
*/
CREATE OR REPLACE TRIGGER DEL_LISTA
BEFORE DELETE ON LISTA FOR EACH ROW BEGIN
    DECLARE COUNTPROD INT;
    DECLARE COUNTGRUPOS INT;

    SET COUNTPROD = (SELECT COUNT(IDLISTA) FROM LISTAPRODUCTOS WHERE IDLISTA=OLD.IDLISTA);
    SET COUNTGRUPOS = (SELECT COUNT(IDLISTA) FROM GRUPOS WHERE IDLISTA=OLD.IDLISTA);

    /* Registramos que se ha borrado una lista ACTIVA*/
    INSERT INTO LOG (FECHA, DESCRIPCION) VALUES (NOW(), CONCAT("Borrado de lista: ", OLD.NOMBRE));
    /* Borramos esta lista del historico listas activas*/
    UPDATE HISTORICO SET CANTIDAD = CANTIDAD - 1 WHERE IDHISTORICO = 2;

    IF COUNTPROD >= 1 THEN
      /* Limpiamos la tabla relacionar todas las referencias de la lista*/
      DELETE FROM LISTAPRODUCTOS WHERE IDLISTA = OLD.IDLISTA;
      /* Actualizamos el registro que indica la cantidad de listas activas que tienen productos*/
      UPDATE HISTORICO SET CANTIDAD = CANTIDAD - 1 WHERE IDHISTORICO = 3;
    END IF;

    /* Borramos los registros de los GRUPOS que pueden acceder a la lista borrada*/
    IF COUNTGRUPOS >= 1 THEN
      DELETE FROM GRUPOS WHERE IDLISTA = OLD.IDLISTA;
    END IF;
END //

-- /*Al insertar un producto conocido en una lista conocida, se cuenta cuantas listas tienen productos sin importar que cantidad tenga*/
-- CREATE OR REPLACE TRIGGER LISTA_CON_PRODUCTOS
-- AFTER INSERT ON LISTAPRODUCTOS FOR EACH ROW BEGIN
--     DECLARE COUNTPROD INT;
--     SET COUNTPROD = (SELECT COUNT(IDPRODUCTO) FROM LISTAPRODUCTOS WHERE IDLISTA=NEW.IDLISTA);

--     INSERT INTO LOG (FECHA, DESCRIPCION) VALUES (NOW(), CONCAT("Inserción de producto en la lista: ", NEW.IDLISTA, " Producto: ", (SELECT NOMBRE FROM PRODUCTOS WHERE IDPRODUCTO = NEW.IDPRODUCTO)));

--     /* Actualizamos indice de listas activas con al menos 1 producto pendiente */
--     IF COUNTPROD = 1 THEN
--       UPDATE HISTORICO SET CANTIDAD = CANTIDAD + 1 WHERE IDHISTORICO = 3;
--     END IF;
-- END //


/* OPERACIONES CON USUARIOS */

/*Al insertar un producto conocido en una lista conocida, se cuenta cuantas listas tienen productos sin importar que cantidad tenga*/
CREATE OR REPLACE TRIGGER NEW_USER
AFTER INSERT ON USUARIOS FOR EACH ROW BEGIN
    INSERT INTO LOG (FECHA, DESCRIPCION) VALUES (NOW(), CONCAT("Nuevo usuario dado de Alta: ", NEW.NOMBRE));
END //

CREATE OR REPLACE TRIGGER UPDATE_USER
AFTER UPDATE ON USUARIOS FOR EACH ROW BEGIN
    INSERT INTO LOG (FECHA, DESCRIPCION) VALUES (NOW(), CONCAT("Información del usuario cambiada:", (SELECT NOMBRE FROM USUARIOS WHERE IDUSUARIO = NEW.IDUSUARIO)));
END //

/* Tenemos que borrar la relacion de los grupos de las listas activas*/

CREATE OR REPLACE TRIGGER DEL_USER
BEFORE DELETE ON USUARIOS FOR EACH ROW BEGIN
  DECLARE COUNTLIST INT;
  SET COUNTLIST = (SELECT COUNT(IDLISTA) FROM GRUPOS WHERE IDUSUARIO = OLD.IDUSUARIO);

  INSERT INTO LOG (FECHA, DESCRIPCION) VALUES (NOW(), CONCAT("Usuario borrado ID: ", OLD.IDUSUARIO, " Nombre: ", OLD.NOMBRE));

  /* Si el usuario pertenece a 1 o mas listas compartidas o no se le borra el acceso*/
  IF COUNTLIST >= 1 THEN
    DELETE FROM GRUPOS WHERE IDUSUARIO = OLD.IDUSUARIO;
  END IF;
END //

DELIMITER ;

/* Insercion de usuarios */
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('50505050A', 'Admin', 'Admin', '+34 678345645', 'admin@void.ugr.es', '1234', '1977/01/01', 'Masculino', 'Administrador', 'Activo', 'image/png', LOAD_FILE('/var/upload/usuarios/admin.png'), NOW());
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('51505050A', 'Juan', 'Martin', '+34 678345245', 'juan@void.ugr.es', '1234', '1977/01/01', 'Masculino', 'Administrador', 'Activo', 'image/png', LOAD_FILE('/var/upload/usuarios/juan.png'), NOW());
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('51505850A', 'Maria', 'Jimenez', '+34 618345746', 'maria@void.ugr.es', '1234', '1977/01/01', 'Femenino', 'Usuario', 'Inactivo', 'image/png', LOAD_FILE('/var/upload/usuarios/maria.png'), NOW());
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('50525050A', 'Ana', 'Fernandez', '+34 678323045', 'ana@void.ugr.es', '1234', '1977/01/01', 'Femenino', 'Usuario', 'Activo', 'image/png', LOAD_FILE('/var/upload/usuarios/ana.png'), NOW());
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('51505150A', 'Pepe', 'Perez', '+34 678305945', 'pepe@void.ugr.es', '1234', '1977/01/01', 'Masculino', 'Usuario', 'Activo', 'image/png', LOAD_FILE('/var/upload/usuarios/pepe.png'), NOW());


/*REGISTRO DE  LISTAS*/
INSERT INTO LISTACOMPRA.LISTA(IDPROPIETARIO,NOMBRE,DESCRIPCION,FECHA,IMGTYPE,IMGBINARY) VALUES (2, "Lista1","Mi lista personal","2022-01-05 12:49:29","image/png",LOAD_FILE("/var/upload/listas/listas.png"));
INSERT INTO LISTACOMPRA.LISTA(IDPROPIETARIO,NOMBRE,DESCRIPCION,FECHA,IMGTYPE,IMGBINARY) VALUES (3, "Lista2","Lista de la compra","2022-02-05 17:49:29","image/png",LOAD_FILE("/var/upload/listas/listas.png"));
INSERT INTO LISTACOMPRA.LISTA(IDPROPIETARIO,NOMBRE,DESCRIPCION,FECHA,IMGTYPE,IMGBINARY) VALUES (3, "Lista3","Lista de cosas que faltan en casa","2021-03-05 17:49:29","image/png",LOAD_FILE("/home/var/upload/listas/listas.png"));
INSERT INTO LISTACOMPRA.LISTA(IDPROPIETARIO,NOMBRE,DESCRIPCION,FECHA,IMGTYPE,IMGBINARY) VALUES (3, "Lista4","Lista para los que vayan a comprar","2022-04-05 12:49:29","image/png",LOAD_FILE("/var/upload/listas/listas.png"));
INSERT INTO LISTACOMPRA.LISTA(IDPROPIETARIO,NOMBRE,DESCRIPCION,FECHA,IMGTYPE,IMGBINARY) VALUES (3, "Lista5","Lista del mercadona","2021-06-05 17:49:29","image/png",LOAD_FILE("/var/upload/listas/listas.png"));
INSERT INTO LISTACOMPRA.LISTA(IDPROPIETARIO,NOMBRE,DESCRIPCION,FECHA,IMGTYPE,IMGBINARY) VALUES (3, "Lista6","Lista para recordar cosas que comprar",NOW(),"image/png",LOAD_FILE("/home/var/upload/listas/listas.png"));
INSERT INTO LISTACOMPRA.LISTA(IDPROPIETARIO,NOMBRE,DESCRIPCION,FECHA,IMGTYPE,IMGBINARY) VALUES (5, "Lista7","Lista de cosas varias","2022-06-05 12:49:29","image/png",LOAD_FILE("/var/upload/listas/listas.png"));


/* REGISTRO DE PRODUCTOS */
INSERT INTO LISTACOMPRA.PRODUCTOS(NOMBRE) VALUES ("Agua");
INSERT INTO LISTACOMPRA.PRODUCTOS(NOMBRE) VALUES ("Leche");
INSERT INTO LISTACOMPRA.PRODUCTOS(NOMBRE) VALUES ("Pan de molde");
INSERT INTO LISTACOMPRA.PRODUCTOS(NOMBRE) VALUES ("Colacao grande");
INSERT INTO LISTACOMPRA.PRODUCTOS(NOMBRE) VALUES ("Cereales chocapic");
INSERT INTO LISTACOMPRA.PRODUCTOS(NOMBRE) VALUES ("Bollicao");
INSERT INTO LISTACOMPRA.PRODUCTOS(NOMBRE) VALUES ("Galletas maría");
INSERT INTO LISTACOMPRA.PRODUCTOS(NOMBRE) VALUES ("Gel de ducha");
INSERT INTO LISTACOMPRA.PRODUCTOS(NOMBRE) VALUES ("Huevos");
INSERT INTO LISTACOMPRA.PRODUCTOS(NOMBRE) VALUES ("Café");
INSERT INTO LISTACOMPRA.PRODUCTOS(NOMBRE) VALUES ("Platanos");
INSERT INTO LISTACOMPRA.PRODUCTOS(NOMBRE) VALUES ("Manzanas");
INSERT INTO LISTACOMPRA.PRODUCTOS(NOMBRE) VALUES ("Kiwis");
INSERT INTO LISTACOMPRA.PRODUCTOS(NOMBRE) VALUES ("Jabón de manos");
INSERT INTO LISTACOMPRA.PRODUCTOS(NOMBRE) VALUES ("Clínex");
INSERT INTO LISTACOMPRA.PRODUCTOS(NOMBRE) VALUES ("Suavizante");
INSERT INTO LISTACOMPRA.PRODUCTOS(NOMBRE) VALUES ("Detergente");

/* REGISTRO DE PRODUCTOS AÑADIDOS A UNA LISTA*/
/* Lista 1 */
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(1,3,2);
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(1,8,1);
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(1,15,3);
/* Lista 2 */
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(2,1,2);
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(2,5,1);
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(2,15,5);
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(2,11,2);
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(2,8,2);
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(2,3,1);
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(2,4,3);
/* Lista 3 */
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(3,6,2);
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(3,9,1);
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(3,12,3);
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(3,7,2);
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(3,14,1);
/* Lista 4 */
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(4,16,1);
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(4,17,1);
/* Lista 5 */
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(5,11,10);
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(5,12,5);
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(5,13,8);
/* Lista 6 */
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(6,5,1);
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(6,2,2);
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(6,17,4);
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(6,13,2);
/* Lista 7 */
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(7,14,1);
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(7,12,5);
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(7,8,1);

/* Asociacion de USUARIOS y LISTA*/
/* Los Editores solo tienen permiso para aniadir mas productos a las listas*/
INSERT INTO LISTACOMPRA.GRUPOS VALUES (1,2,'Propietario');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (2,3,'Propietario');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (3,3,'Propietario');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (4,3,'Propietario');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (5,3,'Propietario');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (6,3,'Propietario');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (7,5,'Propietario');

INSERT INTO LISTACOMPRA.GRUPOS VALUES (1,4,'Editor');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (3,2,'Editor');

INSERT INTO LISTACOMPRA.GRUPOS VALUES (1,3,'Lector');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (2,2,'Lector');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (3,4,'Lector');

/* Historico de produtos inicial */
INSERT INTO HISTORICOPRODUCTOS (NOMBRE,CANTIDAD) VALUES ("Coliflor", 14);
INSERT INTO HISTORICOPRODUCTOS (NOMBRE,CANTIDAD) VALUES ("Naranja", 12);
INSERT INTO HISTORICOPRODUCTOS (NOMBRE,CANTIDAD) VALUES ("Limón", 20);
INSERT INTO HISTORICOPRODUCTOS (NOMBRE,CANTIDAD) VALUES ("Piña", 6);
INSERT INTO HISTORICOPRODUCTOS (NOMBRE,CANTIDAD) VALUES ("Zanahoria", 15);
INSERT INTO HISTORICOPRODUCTOS (NOMBRE,CANTIDAD) VALUES ("Pollo", 7);
INSERT INTO HISTORICOPRODUCTOS (NOMBRE,CANTIDAD) VALUES ("Queso", 33);
INSERT INTO HISTORICOPRODUCTOS (NOMBRE,CANTIDAD) VALUES ("Miel", 15);
INSERT INTO HISTORICOPRODUCTOS (NOMBRE,CANTIDAD) VALUES ("Chocolate", 17);
INSERT INTO HISTORICOPRODUCTOS (NOMBRE,CANTIDAD) VALUES ("Pasta", 20);