DROP DATABASE IF EXISTS LISTACOMPRA;
CREATE DATABASE LISTACOMPRA;

DROP USER IF EXISTS 'adminlistacompra'@'localhost';
CREATE USER 'adminlistacompra'@'localhost' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON LISTACOMPRA.* TO 'adminlistacompra'@'localhost';
FLUSH PRIVILEGES;

DROP TABLE IF EXISTS LISTACOMPRA.USUARIOS;
CREATE TABLE LISTACOMPRA.USUARIOS (
  IDUSUARIO INT NOT NULL AUTO_INCREMENT,
  DNI VARCHAR(9) UNIQUE,
  NOMBRE VARCHAR(50),
  APELLIDOS VARCHAR(100),
  TELEFONO VARCHAR(20) UNIQUE,
  EMAIL VARCHAR(200) UNIQUE,
  PASSWORD VARCHAR(45),
  FNAC DATE,
  SEXO ENUM('Masculino','Femenino'),
  ROL ENUM('Administrador','Usuario'),
  ESTADO ENUM('Activo','Inactivo'),
  IMGTYPE ENUM('image/jpeg', 'image/png', 'image/jpg'),
  IMGBINARY LONGBLOB,
  LASTLOGIN DATETIME,

  CONSTRAINT PK_IDUSUARIO PRIMARY KEY(IDUSUARIO)
);

DROP TABLE IF EXISTS LISTACOMPRA.LISTA;
CREATE TABLE LISTACOMPRA.LISTA (
  IDLISTA INT NOT NULL AUTO_INCREMENT,
  NOMBRE VARCHAR (45),
  DESCRIPCION VARCHAR(45),
  FECHA DATETIME,
  IMGTYPE ENUM('image/jpeg', 'image/png', 'image/jpg'),
  IMGBINARY LONGBLOB,

  CONSTRAINT PK_IDLISTA PRIMARY KEY(IDLISTA)
);

DROP TABLE IF EXISTS LISTACOMPRA.PRODUCTOS;
CREATE TABLE LISTACOMPRA.PRODUCTOS (
  IDPRODUCTO INT NOT NULL AUTO_INCREMENT,
  NOMBRE VARCHAR(45),
  DESCRIPCION VARCHAR(45),

  CONSTRAINT PK_IDPRODUCTO PRIMARY KEY(IDPRODUCTO)
);


DROP TABLE IF EXISTS LISTACOMPRA.LISTAPRODUCTOS;
CREATE TABLE LISTACOMPRA.LISTAPRODUCTOS (
  IDLISTA INT,
  IDPRODUCTO INT,
  CANTIDAD INT,

  CONSTRAINT FK_LISTACOMPRA_LISTAID FOREIGN KEY(IDLISTA) REFERENCES LISTA(IDLISTA),
  CONSTRAINT FK_LISTACOMPRA_IDPRODUCTO FOREIGN KEY(IDPRODUCTO) REFERENCES PRODUCTOS(IDPRODUCTO)
);

DROP TABLE IF EXISTS LISTACOMPRA.GRUPOS;
CREATE TABLE LISTACOMPRA.GRUPOS (
  IDLISTA INT,
  IDUSUARIO INT,
  PRIVILEGIOS ENUM('Propietario','Editor','Lector'),

  CONSTRAINT FK_GRUPOS_LISTAID FOREIGN KEY(IDLISTA) REFERENCES LISTA(IDLISTA),
  CONSTRAINT FK_GRUPOS_IDUSUARIO FOREIGN KEY(IDUSUARIO) REFERENCES USUARIOS(IDUSUARIO)
);


/*Tablas de log*/
DROP TABLE IF EXISTS LISTACOMPRA.LOG;
CREATE TABLE LISTACOMPRA.LOG(
  IDLOG INT NOT NULL AUTO_INCREMENT,
  FECHA DATETIME,
  DESCRIPCION VARCHAR(200),

  CONSTRAINT PK_IDLOG PRIMARY KEY(IDLOG)
);


DROP TABLE IF EXISTS LISTACOMPRA.HISTORICO;
CREATE TABLE LISTACOMPRA.HISTORICO (
  IDHISTORICO INT NOT NULL AUTO_INCREMENT,
  NOMBRE VARCHAR(200),
  CANTIDAD INT,

  CONSTRAINT PK_IDHISTORICO PRIMARY KEY(IDHISTORICO)
);

INSERT INTO LISTACOMPRA.HISTORICO (NOMBRE, CANTIDAD) VALUES ('Número de Listas Creadas:', 0);
INSERT INTO LISTACOMPRA.HISTORICO (NOMBRE, CANTIDAD) VALUES ('Número de Listas Activas:', 0);
INSERT INTO LISTACOMPRA.HISTORICO (NOMBRE, CANTIDAD) VALUES ('Número de Listas con Elementos pendientes de compra:', 0);

USE LISTACOMPRA;

CREATE OR REPLACE VIEW PRODUCTOSENLISTAS AS
  SELECT P.NOMBRE, SUM(L.CANTIDAD) AS CANTIDAD FROM PRODUCTOS AS P
  INNER JOIN LISTAPRODUCTOS AS L
  ON P.IDPRODUCTO = L.IDPRODUCTO
  GROUP BY P.IDPRODUCTO;


USE LISTACOMPRA;
DELIMITER //

CREATE OR REPLACE TRIGGER LOGIN_USER
AFTER UPDATE ON USUARIOS FOR EACH ROW BEGIN
  DECLARE VARIDUSUARIO INT;
  SET VARIDUSUARIO = NEW.IDUSUARIO;

  IF VARIDUSUARIO IN (SELECT IDUSUARIO FROM USUARIOS WHERE IDUSUARIO = VARIDUSUARIO) THEN
    INSERT INTO LOG (FECHA, DESCRIPCION) VALUES (NOW(), CONCAT("El usuario: ", (SELECT NOMBRE FROM USUARIOS WHERE IDUSUARIO = VARIDUSUARIO), " se ha autenticado correctamente"));
  END IF;
END //

/* ACCIONES CON LISTAS*/
/*Al crear una nueva lista se indica en el log y se actualiza el historico*/
CREATE OR REPLACE TRIGGER NEW_LISTA
AFTER INSERT ON LISTA FOR EACH ROW BEGIN
    INSERT INTO LOG (FECHA, DESCRIPCION) VALUES (NOW(), CONCAT("Creación de lista nueva: ", NEW.NOMBRE));
    UPDATE HISTORICO SET CANTIDAD = CANTIDAD + 1 WHERE IDHISTORICO = 1;
    UPDATE HISTORICO SET CANTIDAD = CANTIDAD + 1 WHERE IDHISTORICO = 2;
END //

/*
Al borrar una lista se indica en el log y se actualiza el historico quitando solo las listas activas

Tb se registra el cambio de la cantidad de Listas con productos si esta lo tuviera
*/
CREATE OR REPLACE TRIGGER DEL_LISTA
AFTER DELETE ON LISTA FOR EACH ROW BEGIN
    DECLARE COUNTPROD INT;
    DECLARE COUNTGRUPOS INT;

    SET COUNTPROD = (SELECT COUNT(IDLISTA) FROM LISTAPRODUCTOS WHERE IDLISTA=OLD.IDLISTA);
    SET COUNTGRUPOS = (SELECT COUNT(IDLISTA) FROM GRUPOS WHERE IDLISTA=OLD.IDLISTA);

    /* Registramos que se ha borrado una lista ACTIVA*/
    INSERT INTO LOG (FECHA, DESCRIPCION) VALUES (NOW(), CONCAT("Borrado de lista: ", OLD.NOMBRE));
    /* Borramos esta lista del historico listas activas*/
    UPDATE HISTORICO SET CANTIDAD = CANTIDAD - 1 WHERE IDHISTORICO = 2;

    IF COUNTPROD >= 1 THEN
      /* Limpiamos la tabla relacionar todas las referencias de la lista*/
      DELETE FROM LISTAPRODUCTOS WHERE IDLISTA = OLD.IDLISTA;
      /* Actualizamos el registro que indica la cantidad de listas activas que tienen productos*/
      UPDATE HISTORICO SET CANTIDAD = CANTIDAD - 1 WHERE IDHISTORICO = 3;
    END IF;

    /* Borramos los registros de los GRUPOS que pueden acceder a la lista borrada*/
    IF COUNTGRUPOS >= 1 THEN
      DELETE FROM GRUPOS WHERE IDLISTA = OLD.IDLISTA;
    END IF;
END //

/*Al insertar un producto conocido en una lista conocida, se cuenta cuantas listas tienen productos sin importar que cantidad tenga*/
CREATE OR REPLACE TRIGGER LISTA_CON_PRODUCTOS
AFTER INSERT ON LISTAPRODUCTOS FOR EACH ROW BEGIN
    DECLARE COUNTPROD INT;
    SET COUNTPROD = (SELECT COUNT(IDPRODUCTO) FROM LISTAPRODUCTOS WHERE IDLISTA=NEW.IDLISTA);

    INSERT INTO LOG (FECHA, DESCRIPCION) VALUES (NOW(), CONCAT("Inserción de producto en la lista: ", NEW.IDLISTA, " Producto: ", (SELECT NOMBRE FROM PRODUCTOS WHERE IDPRODUCTO = NEW.IDPRODUCTO)));

    /* Actualizamos indice de listas activas con al menos 1 producto pendiente */
    IF COUNTPROD = 1 THEN
      UPDATE HISTORICO SET CANTIDAD = CANTIDAD + 1 WHERE IDHISTORICO = 3;
    END IF;
END //


/* OPERACIONES CON USUARIOS */

/*Al insertar un producto conocido en una lista conocida, se cuenta cuantas listas tienen productos sin importar que cantidad tenga*/
CREATE OR REPLACE TRIGGER NEW_USER
AFTER INSERT ON USUARIOS FOR EACH ROW BEGIN
    INSERT INTO LOG (FECHA, DESCRIPCION) VALUES (NOW(), CONCAT("Nuevo usuario dado de Alta: ", NEW.NOMBRE));
END //

CREATE OR REPLACE TRIGGER UPDATE_USER
AFTER UPDATE ON USUARIOS FOR EACH ROW BEGIN
    INSERT INTO LOG (FECHA, DESCRIPCION) VALUES (NOW(), CONCAT("Información del usuario cambiada:", (SELECT NOMBRE FROM USUARIOS WHERE IDUSUARIO = NEW.IDUSUARIO)));
END //

/* Tenemos que borrar la relacion de los grupos de las listas activas*/

CREATE OR REPLACE TRIGGER DEL_USER
AFTER DELETE ON USUARIOS FOR EACH ROW BEGIN
  DECLARE COUNTLIST INT;
  SET COUNTLIST = (SELECT COUNT(IDLISTA) FROM GRUPOS WHERE IDUSUARIO = OLD.IDUSUARIO);

  INSERT INTO LOG (FECHA, DESCRIPCION) VALUES (NOW(), CONCAT("Usuario borrado ID: ", OLD.IDUSUARIO, " Nombre: ", OLD.NOMBRE));

  /* Si el usuario pertenece a 1 o mas listas compartidas o no se le borra el acceso*/
  IF COUNTLIST >= 1 THEN
    DELETE FROM GRUPOS WHERE IDUSUARIO = OLD.IDUSUARIO;
  END IF;
END //

DELIMITER ;

/*REGISTRO DE  LISTAS*/
INSERT INTO LISTACOMPRA.LISTA(NOMBRE,DESCRIPCION,FECHA,IMGTYPE,IMGBINARY) VALUES ("ALista1","Descripcion","2022-01-05 12:49:29","image/png",LOAD_FILE("/var/upload/listas/listas.png"));
INSERT INTO LISTACOMPRA.LISTA(NOMBRE,DESCRIPCION,FECHA,IMGTYPE,IMGBINARY) VALUES ("Lista2","Descripcion","2022-02-05 17:49:29","image/png",LOAD_FILE("/var/upload/listas/listas.png"));
INSERT INTO LISTACOMPRA.LISTA(NOMBRE,DESCRIPCION,FECHA,IMGTYPE,IMGBINARY) VALUES ("ZLista3","Descripcion","2021-03-05 17:49:29","image/png",LOAD_FILE("/home/var/upload/listas/listas.png"));
INSERT INTO LISTACOMPRA.LISTA(NOMBRE,DESCRIPCION,FECHA,IMGTYPE,IMGBINARY) VALUES ("BLista4","Descripcion","2022-04-05 12:49:29","image/png",LOAD_FILE("/var/upload/listas/listas.png"));
INSERT INTO LISTACOMPRA.LISTA(NOMBRE,DESCRIPCION,FECHA,IMGTYPE,IMGBINARY) VALUES ("CLista5","Descripcion","2021-06-05 17:49:29","image/png",LOAD_FILE("/var/upload/listas/listas.png"));
INSERT INTO LISTACOMPRA.LISTA(NOMBRE,DESCRIPCION,FECHA,IMGTYPE,IMGBINARY) VALUES ("DLista6","Descripcion",NOW(),"image/png",LOAD_FILE("/home/var/upload/listas/listas.png"));
INSERT INTO LISTACOMPRA.LISTA(NOMBRE,DESCRIPCION,FECHA,IMGTYPE,IMGBINARY) VALUES ("ALista7","Descripcion","2022-06-05 12:49:29","image/png",LOAD_FILE("/var/upload/listas/listas.png"));
INSERT INTO LISTACOMPRA.LISTA(NOMBRE,DESCRIPCION,FECHA,IMGTYPE,IMGBINARY) VALUES ("Lista8","Descripcion","2019-06-05 17:49:29","image/png",LOAD_FILE("/var/upload/listas/listas.png"));
INSERT INTO LISTACOMPRA.LISTA(NOMBRE,DESCRIPCION,FECHA,IMGTYPE,IMGBINARY) VALUES ("ZLista9","Descripcion","2010-06-05 17:49:29","image/png",LOAD_FILE("/home/var/upload/listas/listas.png"));
INSERT INTO LISTACOMPRA.LISTA(NOMBRE,DESCRIPCION,FECHA,IMGTYPE,IMGBINARY) VALUES ("ELista10","Descripcion","2022-06-05 12:49:29","image/png",LOAD_FILE("/var/upload/listas/listas.png"));
INSERT INTO LISTACOMPRA.LISTA(NOMBRE,DESCRIPCION,FECHA,IMGTYPE,IMGBINARY) VALUES ("Lista11","Descripcion","2021-06-05 17:49:29","image/png",LOAD_FILE("/var/upload/listas/listas.png"));
INSERT INTO LISTACOMPRA.LISTA(NOMBRE,DESCRIPCION,FECHA,IMGTYPE,IMGBINARY) VALUES ("AsLista12","Descripcion",NOW(),"image/png",LOAD_FILE("/home/var/upload/listas/listas.png"));


/* REGISTRO DE PRODUCTOS */
INSERT INTO LISTACOMPRA.PRODUCTOS(NOMBRE, DESCRIPCION) VALUES ("Fanta", "La fanta");
INSERT INTO LISTACOMPRA.PRODUCTOS(NOMBRE, DESCRIPCION) VALUES ("Cocacola", "La cocacola");

/* REGISTRO DE PRODUCTOS AÑADIDOS A UNA LISTA*/
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(1,1,10);
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(2,1,20);
INSERT INTO LISTACOMPRA.LISTAPRODUCTOS VALUES(1,2,100);

/* Insercion de usuarios */
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('50505050A', 'Prueba0', 'Apellidos', '+34 678345645', 'email@pruebas.com', 'password', '1977/01/01', 'Masculino', 'Administrador', 'Activo', 'image/png', LOAD_FILE('/var/upload/usuarios/usuarios.jpg'), NOW());
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('51505050A', 'Prueba2', 'Apellidos', '+34 178345245', 'email2@pruebas.com', 'password', '1977/01/01', 'Femenino', 'Usuario', 'Activo', 'image/png', LOAD_FILE('/var/upload/usuario.png'), NOW());
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('51505850A', 'Prueba3', 'Apellidos', '+34 118345746', 'email3@pruebas.com', 'password', '1977/01/01', 'Masculino', 'Usuario', 'Inactivo', 'image/png', LOAD_FILE('/var/upload/usuario.png'), NOW());
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('50525050A', 'Prueba4', 'Apellidos', '+34 678323045', 'email4@pruebas.com', 'password', '1977/01/01', 'Masculino', 'Administrador', 'Activo', 'image/png', LOAD_FILE('/var/upload/usuarios/usuarios.jpg'), NOW());
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('51505150A', 'Prueba5', 'Apellidos', '+34 178305945', 'email5@pruebas.com', 'password', '1977/01/01', 'Femenino', 'Usuario', 'Activo', 'image/png', LOAD_FILE('/var/upload/usuario.png'), NOW());
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('51505250A', 'Prueba6', 'Apellidos', '+34 168325846', 'email6@pruebas.com', 'password', '1977/01/01', 'Femenino', 'Usuario', 'Inactivo', 'image/png', LOAD_FILE('/home/adusuario.png'), NOW());
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('50505350A', 'Prueba7', 'Apellidos', '+34 678335645', 'email7@pruebas.com', 'password', '1977/01/01', 'Masculino', 'Administrador', 'Activo', 'image/png', LOAD_FILE('/var/upload/usuarios/usuarios.jpg'), NOW());
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('51505450A', 'Prueba8', 'Apellidos', '+34 158375545', 'email8@pruebas.com', 'password', '1977/01/01', 'Masculino', 'Usuario', 'Activo', 'image/png', LOAD_FILE('/var/upload/usuario.png'), NOW());
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('51505650A', 'Prueba9', 'Apellidos', '+34 148395246', 'email9@pruebas.com', 'password', '1977/01/01', 'Masculino', 'Usuario', 'Inactivo', 'image/png', LOAD_FILE('/var/upload/usuario.png'), NOW());
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('50545050A', 'Prueba10', 'Apellidos', '+34 278345645', 'email10@pruebas.com', 'password', '1977/01/01', 'Masculino', 'Administrador', 'Activo', 'image/png', LOAD_FILE('/var/upload/usuarios/usuarios.jpg'), NOW());
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('51567050A', 'Prueba11', 'Apellidos', '+34 278345245', 'email11@pruebas.com', 'password', '1977/01/01', 'Femenino', 'Usuario', 'Activo', 'image/png', LOAD_FILE('/var/upload/usuario.png'), NOW());
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('51555850A', 'Prueba12', 'Apellidos', '+34 218345746', 'email12@pruebas.com', 'password', '1977/01/01', 'Masculino', 'Usuario', 'Inactivo', 'image/png', LOAD_FILE('/var/upload/usuario.png'), NOW());
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('50545051A', 'Prueba13', 'Apellidos', '+34 278343045', 'email13@pruebas.com', 'password', '1977/01/01', 'Masculino', 'Administrador', 'Activo', 'image/png', LOAD_FILE('/var/upload/usuarios/usuarios.jpg'), NOW());
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('51535152A', 'Prueba14', 'Apellidos', '+34 278305945', 'email14@pruebas.com', 'password', '1977/01/01', 'Femenino', 'Usuario', 'Activo', 'image/png', LOAD_FILE('/var/upload/usuario.png'), NOW());
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('51525253A', 'Prueba15', 'Apellidos', '+34 268325846', 'email15@pruebas.com', 'password', '1977/01/01', 'Femenino', 'Usuario', 'Inactivo', 'image/png', LOAD_FILE('/var/upload/usuario.png'), NOW());
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('50515354A', 'Prueba16', 'Apellidos', '+34 278335645', 'email16@pruebas.com', 'password', '1977/01/01', 'Masculino', 'Administrador', 'Activo', 'image/png', LOAD_FILE('/var/upload/usuarios/usuarios.jpg'), NOW());
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('51512455A', 'Prueba17', 'Apellidos', '+34 258275545', 'email17@pruebas.com', 'password', '1977/01/01', 'Masculino', 'Usuario', 'Activo', 'image/png', LOAD_FILE('/var/upload/usuario.png'), NOW());
INSERT INTO LISTACOMPRA.USUARIOS (DNI, NOMBRE, APELLIDOS, TELEFONO, EMAIL, PASSWORD, FNAC, SEXO, ROL, ESTADO, IMGTYPE, IMGBINARY, LASTLOGIN) VALUES  ('51522656A', 'Prueba18', 'Apellidos', '+34 248395246', 'email18@pruebas.com', 'password', '1977/01/01', 'Masculino', 'Usuario', 'Inactivo', 'image/png', LOAD_FILE('/var/upload/usuario.png'), NOW());


/* Asociacion de USUARIOS y LISTA*/
/* Los Editores solo tienen permiso para aniadir mas productos a las listas*/
INSERT INTO LISTACOMPRA.GRUPOS VALUES (1,1,'Propietario');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (2,1,'Lector');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (3,1,'Editor');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (4,1,'Lector');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (5,1,'Editor');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (6,1,'Propietario');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (7,1,'Editor');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (8,1,'Lector');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (9,1,'Editor');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (10,1,'Propietario');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (11,1,'Editor');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (12,1,'Lector');

INSERT INTO LISTACOMPRA.GRUPOS VALUES (1,2,'Editor');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (2,2,'Propietario');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (3,2,'Editor');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (4,2,'Lector');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (5,2,'Editor');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (6,2,'Propietario');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (7,2,'Lector');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (8,2,'Editor');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (9,2,'Lector');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (10,2,'Editor');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (11,2,'Propietario');
INSERT INTO LISTACOMPRA.GRUPOS VALUES (12,2,'Editor');

